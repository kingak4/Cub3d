✅ Lista zadań do cub3D (mandatory part)
1. Przygotowanie projektu

 Stwórz repo/projekt cub3D.

 Dodaj Makefile (all, clean, fclean, re).

 Dołącz libft (będzie potrzebna do parsowania).

 Podłącz MiniLibX (upewnij się, że działa na Twoim systemie).

2. Obsługa pliku .cub

 Funkcja otwierająca i czytająca plik .cub.

 Walidacja rozszerzenia .cub.

 Rozdzielenie danych wejściowych na sekcje:

tekstury (NO, SO, WE, EA),

kolory (F, C),

mapa (ostatnia część pliku).

 Parsowanie tekstur (ścieżki do plików).

 Parsowanie kolorów (F, C → wartości RGB, sprawdzenie zakresu 0–255).

 Zapisanie danych w strukturze (np. t_config).

3. Walidacja mapy

 Sprawdź, czy mapa istnieje i nie jest pusta.

 Upewnij się, że zawiera tylko znaki: 0, 1, N, S, E, W, spacje.

 Sprawdź, czy jest dokładnie jedna pozycja gracza.

 Sprawdź, czy mapa jest zamknięta ścianami (żaden 0 ani NSEW nie może dotykać „pustki/spacji”).

 Przekonwertuj mapę na tablicę 2D w pamięci.

4. Inicjalizacja gry

 Stwórz okno w MiniLibX.

 Załaduj tekstury (xpm → obrazek).

 Zapisz pozycję gracza (x, y) i kierunek patrzenia (N, S, E, W).

 Zainicjalizuj kolory podłogi i sufitu.

5. Implementacja raycastingu

 Podziel ekran na pionowe paski (np. każdy piksel w poziomie = 1 promień).

 Dla każdego promienia:

Oblicz kąt względem kierunku gracza.

Wysyłaj promień do momentu, aż trafi w ścianę (1).

Oblicz odległość do ściany (uwzględnij korektę na „fish-eye”).

 Wyznacz wysokość pionowej ściany do narysowania na ekranie.

 Wybierz odpowiednią teksturę w zależności od strony ściany (N/S/E/W).

 Dorysuj podłogę i sufit w odpowiednich kolorach.

6. Sterowanie gracza

 Obsłuż klawisze:

W – idź do przodu,

S – idź do tyłu,

A – przesunięcie w lewo (strafe),

D – przesunięcie w prawo (strafe),

← i → – obrót kamery.

 Dodaj kolizje (gracz nie może przechodzić przez ściany).

 Obsłuż ESC → zamknięcie gry.

 Obsłuż zamknięcie okna (kliknięcie czerwonego krzyżyka).

7. Renderowanie obrazu

 Rysuj scenę do bufora obrazu (mlx_image).

 Wyświetlaj bufor w oknie (mlx_put_image_to_window).

 Odświeżaj obraz przy każdym ruchu/obrocie.

8. Obsługa błędów

 Każdy błąd pliku .cub → Error\n<opis> i exit.

 Każdy brakujący element (np. brak tekstury, brak koloru) → błąd.

 Sprawdź, czy ścieżki do tekstur istnieją.

 Pamiętaj o free() → brak wycieków pamięci.

9. Testowanie

 Testy minimalnej mapy.

 Testy map z błędami (dziury, kilka graczy, złe kolory, złe ścieżki).

 Testy dużych map.

 Testy stabilności (np. minimalizowanie okna, kilka minut działania).
